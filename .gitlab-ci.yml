image: minds/php:8.0

stages:
  - build
  - test
  - prepare
  - review
  - deploy:staging
  - qa
  - deploy:canary
  - deploy:production

build:
  stage: build
  script:
    - apk add --no-cache git
    - sh tools/setup.sh production
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - vendor
      - bin

test:
  stage: test
  image: minds/php:8.0
  script:
    - php -n -c Spec/php-test.ini bin/phpspec run

lint:
  stage: test
  image: minds/php:8.0
  script:
    - bin/php-cs-fixer fix --allow-risky=yes --verbose --dry-run

static-analysis:
  stage: test
  image: minds/php:8.0
  script:
    - mv settings.example.php settings.php
    - bin/phpstan analyse --memory-limit=1G
  allow_failure: true

prepare:fpm:
  stage: prepare
  image: minds/ci:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - |
      docker build \
        -t $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID \
        -f containers/php-fpm/Dockerfile \
        --build-arg MINDS_VERSION=$CI_PIPELINE_ID \
        --build-arg SENTRY_DSN=$SENTRY_DSN \
        .
    - docker push $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID
    - >
      if [ $CI_COMMIT_BRANCH == "master" ]; then 
        docker tag $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE/fpm:latest &&
        docker push $CI_REGISTRY_IMAGE/fpm:latest
      fi

prepare:runners:
  stage: prepare
  image: minds/ci:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - |
      docker build \
        -t $CI_REGISTRY_IMAGE/runners:$CI_PIPELINE_ID \
        -f containers/php-runners/Dockerfile \
        --build-arg MINDS_VERSION=$CI_PIPELINE_ID \
        --build-arg SENTRY_DSN=$SENTRY_DSN \
        .
    - docker push $CI_REGISTRY_IMAGE/runners:$CI_PIPELINE_ID
    - >
      if [ $CI_COMMIT_BRANCH == "master" ]; then 
        docker tag $CI_REGISTRY_IMAGE/runners:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE/runners:latest &&
        docker push $CI_REGISTRY_IMAGE/runners:latest
      fi

prepare:all:sentry:
  stage: prepare
  image: getsentry/sentry-cli
  script:
    - echo "Create a new release $CI_PIPELINE_ID"
    - sentry-cli releases new $CI_PIPELINE_ID
    - sentry-cli releases set-commits --auto $CI_PIPELINE_ID
    - sentry-cli releases finalize $CI_PIPELINE_ID
    - echo "Finalized release for $CI_PIPELINE_ID"

review:start:
  stage: review
  image: minds/aws-helm:latest
  script:
    - aws eks update-kubeconfig --name=sandbox
    - git clone --branch=master https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/minds/helm-charts.git
    - echo "Upgrading helm for pipeline ${CI_PIPELINE_ID}"
    - echo "Setting to image ${CI_REGISTRY_IMAGE}"
    - "helm upgrade \
      --install \
      --reuse-values \
      --set engine.image.repository=$CI_REGISTRY_IMAGE/fpm \
      --set-string engine.image.tag=$CI_PIPELINE_ID \
      --set domain=$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
      --set cdn_domain=$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
      --set siteUrl=https://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN/
      --wait \
      $CI_BUILD_REF_SLUG \
      ./helm-charts/minds"
    - sentry-cli releases deploys $CI_PIPELINE_ID new -e review-$CI_COMMIT_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: review:stop
  except:
    refs:
      - master
      - feat/ci-k8s

review:stop:
  stage: review
  image: minds/aws-helm:latest
  script:
    - aws eks update-kubeconfig --name=sandbox
    - helm del $CI_BUILD_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    action: stop
  variables:
    GIT_STRATEGY: none
  when: manual
  except:
    refs:
      - master
      - feat/ci-k8s

# qa:manual:
#   stage: qa
#   script:
#     - echo "Manually approved"
#   when: manual
#   only:
#     refs:
#       - master
#       - production
#       - test/gitlab-ci
#   allow_failure: false

################
# Deploy Stage #
################

.deploy: &deploy
  stage: deploy:staging
  image: minds/ci:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker pull $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID
    # Push to Gitlab registry
    - docker tag $CI_REGISTRY_IMAGE/fpm:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE/fpm:$IMAGE_LABEL
    - docker push $CI_REGISTRY_IMAGE/fpm:$IMAGE_LABEL
    # Update EKS role
    - aws eks --region us-east-1 update-kubeconfig --name $AWS_EKS_CLUSTER_NAME --role-arn=$AWS_IAM_ROLE_ARN
    # Update the image tags
    - kubectl rollout restart deployment minds-engine-$IMAGE_LABEL
    # Update sentry
    - sentry-cli releases deploys $CI_PIPELINE_ID new -e $IMAGE_LABEL

staging:fpm:
  <<: *deploy
  stage: deploy:staging
  variables:
    IMAGE_LABEL: "staging"
  environment:
    name: staging
    url: https://www.minds.com/?staging=1
  only:
    refs:
      - master
      - feat/ci-k8s

canary:fpm:
  <<: *deploy
  stage: deploy:canary
  variables:
    IMAGE_LABEL: "canary"
  only:
    refs:
      - master
  environment:
    name: canary
    url: https://www.minds.com/?canary=1 # requires canary cookie
  when: manual
  allow_failure: true

production:fpm:
  <<: *deploy
  stage: deploy:production
  variables:
    IMAGE_LABEL: "production"
  only:
    refs:
      - master
  environment:
    name: production
    url: https://www.minds.com/
  when: manual

##
# TODO: As we now have lots of runners,
# redeploying them needs more though
# below simply updates the container
##

production:runners:
  stage: deploy:production
  image: minds/ci:latest
  services:
    - docker:dind
  script:
    - IMAGE_LABEL="production"
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker pull $CI_REGISTRY_IMAGE/runners:$CI_PIPELINE_ID
    # Push gitlab registry
    - docker tag $CI_REGISTRY_IMAGE/runners:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE/runners:$IMAGE_LABEL
    - docker push $CI_REGISTRY_IMAGE/runners:$IMAGE_LABEL
  only:
    refs:
      - master
  environment:
    name: runners
    url: https://www.minds.com/
